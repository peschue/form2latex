<!DOCTYPE html>
<!--

form2latex - Form Editing Page

MIT License

Copyright (c) 2019-2023 Peter SchÃ¼ller

-->
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>{{site_title}} - Form Entry</title>
  <style>
    {{{commoncss}}}

    .hidden, .template {
      display: none;
    }

    .warning_message, .warning_message_ampersands {
      color: red;
    }
  </style>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
  <script>
    {{{commonjs}}}

    function validation_event(e) {
      const value = $(this).val();

      const pattern = /^[a-zA-Z0-9!"#\'()+,./:;<=>?|\s-&]*$/;
      if (!pattern.test(value)) {
        $(this).closest('.onevaluecontainer').find('.warning_message').show();
      } else {
        $(this).closest('.onevaluecontainer').find('.warning_message').hide();
      }

      // if validate_ampersand is not specified, anything is allowed
      var ampersands_bad = false;
      const validate_amp = $(this).attr('validate_ampersands');
      const validate_amp_int = parseInt(validate_amp, 10);
      if (!isNaN(validate_amp_int)) {
        // count ampersands and warn if not equal to given number
        const match = value.match(/&/g);
        if (validate_amp_int == 0) {
          if (match) {
            ampersands_bad = true; // bad, we should not have ampersands but we have
          }
        } else {
          if (match && match.length != validate_amp_int) {
            ampersands_bad = true; // bad, we have a match and the number of matches is not the desired one
          };
          if (!match) {
            ampersands_bad = true; // bad, we have no match but should have one > 0
          };
        }
      };
      if (ampersands_bad) {
        $(this).closest('.onevaluecontainer').find('.warning_message_ampersands').show();
      } else {
        $(this).closest('.onevaluecontainer').find('.warning_message_ampersands').hide();
      }
    }

    function install() {

      if ({{isDraft}}) {
        // on click to .more, get fieldname from attribute and clone corresponding template after container of element with button
        $(".more").click(function() {
          let name = $(this).attr('fieldname');
          let template = $("#template-"+name).find('.tocopy');
          $(this).closest('.onevaluecontainer').after(template.clone(true));
        });

        // on click to .delete, remove first onevaluecontainer parent
        $(".delete").click(function() {
          $(this).closest('.onevaluecontainer').remove();
        });

        // validate for each input change
        $(".validate").bind('input', validation_event);
        // validate once at load of the editor, not only when editing the first time
        $(".validate").trigger('input');

      } else {
        $(".disable_for_readonly").attr('disabled', 'disabled');
        $(".disable_for_readonly").attr('readOnly', 'readonly');
      }
    }

    $(document).ready(install);
  </script>
</head>
<body>
  <h1>Filling Form of Type {{formtype}}</h1>

	<div class='hidden'>
  {{#blocks}}
	{{{template}}}
  {{/blocks}}
	</div>

  <form action="{{{prefix}}}/forms/{{formkey}}/{{version}}/action" method="post" enctype="multipart/form-data">
  <p>
    <b>Name:</b>
    <input type="text" name="formkey" value="{{formkey}}"/>
    Version:
    <b>v{{version}}{{#isDraft}}-Draft{{/isDraft}}</b>
		{{#basedOnVersion}}
		(based on version <a href="{{{prefix}}}/forms/{{formtype}}/{{formkey}}/{{basedOnVersion}}/edit">v{{basedOnVersion}}</a>)
		{{/basedOnVersion}}
    {{#formhtmlcomment}}<p class="comment">{{{formhtmlcomment}}}</p>{{/formhtmlcomment}}
  </p>
  <input type="hidden" name="formtype" value="{{formtype}}"/>
  {{#blocks}}
	<p class="header">
    {{name}}
    {{#htmlcomment}}<span class="comment">{{{htmlcomment}}}</span>{{/htmlcomment}}
  </p>
	{{{control}}}
  {{/blocks}}
  {{#isDraft}}
    <p><input type="submit" name="save_and_assemble" value="Save &amp; Generate PDF" /></p>
    <p><input type="submit" name="delete_draft" value="Delete draft" /></p>
    {{#hasPDF}}
      <p><input type="submit" name="finalize_version" value="Finalize Version {{version}} - This will not save changes in above form!" /></p>
    {{/hasPDF}}
  {{/isDraft}}
  {{#hasPDF}}
  <p><a href="{{{pdflink}}}" target="_blank">PDF {{formkey}}v{{version}}</a></p>
  {{/hasPDF}}
  {{^isDraft}}
  <p><input type="submit" name="draft_from_this" value="Create new draft from this version" /></p>
  {{/isDraft}}
  </form>

  <br/>

  <p><a href="{{{prefix}}}/">Back to Form Selection</a> (do not save)</p>

  {{#showlogout}}
  <p><a href="{{{prefix}}}/logout">Logout</a></p>
  {{/showlogout}}

  <p>form2latex appversion={{appversion}}.</p>
</body>
</html>
